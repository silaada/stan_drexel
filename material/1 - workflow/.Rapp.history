x <- matrix(rep(1, 50), nrow=5, ncol=10)#
#
registerDoParallel(makeCluster(detectCores()))#
#
output <- foreach(x_col=x, .combine='cbind', .packages='rstan') %do% {#
  #x <- 1#
  #y <- 1 * 1#
  #z <- 1 * 1 * 1#
  length(x_col)#
}#
#
stopImplicitCluster()
output
x
x <- transpose(matrix(rep(1, 50), nrow=5, ncol=10))#
#
registerDoParallel(makeCluster(detectCores()))#
#
output <- foreach(x_col=x, .combine='cbind', .packages='rstan') %do% {#
  #x <- 1#
  #y <- 1 * 1#
  #z <- 1 * 1 * 1#
  length(x_col)#
}#
#
stopImplicitCluster()
output
t(x)
x <- t(matrix(rep(1, 50), nrow=5, ncol=10))#
#
registerDoParallel(makeCluster(detectCores()))#
#
output <- foreach(x_col=x, .combine='cbind', .packages='rstan') %dopar% {#
  #x <- 1#
  #y <- 1 * 1#
  #z <- 1 * 1 * 1#
  length(x_col)#
}#
#
stopImplicitCluster()
output
pgamma(3, 5, 5)
pgamma(4, 5, 5)
x <- seq(0, 10, 0.01)
plot(x, gamma(x, 5, 5))
plot(x, gamma(x, 5, rate=5))
plot(x, dgamma(x, 5, rate=5))
plot(x, dgamma(x, 8, rate=5))
plot(x, dgamma(x, 10, rate=5))
plot(x, dgamma(x, 12, rate=5))
plot(x, dgamma(x, 20, rate=5))
plot(x, dgamma(x, 30, rate=15))
plot(x, dgamma(x, 40, rate=15))
plot(x, dgamma(x, 80, rate=40))
plot(x, dgamma(x, 120, rate=40))
plot(x, dgamma(x, 130, rate=40))
pgamma(3, 130, rate=40)
plot(x, dgamma(x, 260, rate=80))
pgamma(3, 260, rate=80)
pgamma(4, 260, rate=80)
plot(x, dgamma(x, 350, rate=100))
pgamma(4, 350, rate=100)
pgamma(3, 350, rate=100)
pgamma(3, 350, rate=90)
pnorm(3, 0, 1)
pnorm(2, 0, 1)
pnorm(2.5, 0, 1)
pnorm(2.25, 0, 1)
pnorm(2.35, 0, 1)
pgamma(3, 9*49, rate=18*7)
pnorm(-2.35, 0, 1)
pgamma(3, 2.35*3*49, rate=18*7)
pgamma(3, 9*49, rate=18*7)
pgamma(4, 9*49, rate=18*7)
pgamma(3, 2.35*3*49, rate=2.35*6*7)
pgamma(4, 2.35*3*49, rate=2.35*6*7)
(pgamma(4, 2.35*3*49 + 0.000001, rate=2.35*6*7) - pgamma(4, 2.35*3*49 - 0.000001, rate=2.35*6*7)) / (2 * 0.000001)
(pgamma(4, 2.35*3*49, rate=2.35*6*7 + 0.000001) - pgamma(4, 2.35*3*49, rate=2.35*6*7 - 0.000001)) / (2 * 0.000001)
?rt
rt(1000, 5)
k_hat <- function(x) {#
  N <- length(x)#
  x <- sort(x)#
  if (x[1] <= 0) {#
    print("x must be positive!")#
    return (0)#
  }#
#
  q <- x[floor(0.25 * N + 0.5)]#
#
  M <- 20 + floor(sqrt(N))#
#
  b_hat_vec <- rep(0, M)#
  log_w_vec <- rep(0, M)#
#
  for (m in 1:M) {#
    b_hat_vec[m] <- 1 / x[N] + (1 - sqrt(M / (m - 0.5))) / (3 * q)#
    k_hat <- - mean( log (1 - b_hat_vec[m] * x) )#
    log_w_vec[m] <- length(x) * ( log(b_hat_vec[m] / k_hat) + k_hat - 1)#
  }#
#
  max_log_w <- max(log_w_vec)#
  b_hat <- sum(b_hat_vec * exp(log_w_vec - max_log_w)) / sum(exp(log_w_vec - max_log_w))#
#
  mean( log (1 - b_hat * x) )#
}#
#
tail_k_hats <- function(x) {#
  x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)#
  x_right <- x[x > x_center] - x_center#
  c(k_hat(x_left), k_hat(x_right))#
}#
#
x <- rt(10000, 5)#
tail_k_hats(x)
seq(0.5, 10, 0.25)
k_hats <- sapply(seq(0.5, 10, 0.25), function(nu) tail_k_hats(rt(10000, nu)))
dim(khats)
dim(k_hats)
k_hats
k_hats[1,]
set.seed(585483)
set.seed(585483)#
#
nus <- seq(0.5, 10, 0.1)#
#
k_hats <- sapply(nus, function(nu) tail_k_hats(rt(10000, nu)))#
#
plot(nus, k_hats[1,])
plot(nus, k_hats[2,])
cbind(nus, k_hats[1,])
plot(nus, k_hats[1,])
plot(nus, k_hats[1,])#
abline(v=1, col=c_light, lty=1, lw=2)#
abline(v=2, col=c_light, lty=1, lw=2)
c_light <- c("#DCBCBC")#
c_light_highlight <- c("#C79999")#
c_mid <- c("#B97C7C")#
c_mid_highlight <- c("#A25050")#
c_dark <- c("#8F2727")#
c_dark_highlight <- c("#7C0000")
plot(nus, k_hats[1,])#
abline(v=1, col=c_light, lty=1, lw=2)#
abline(v=2, col=c_light, lty=1, lw=2)
plot(nus, k_hats[1,])#
abline(v=1, col="gray80", lwd=2, lty=3)#
abline(v=2, col="gray80", lwd=2, lty=3)
set.seed(585483)#
#
nus <- seq(0.5, 10, 0.1)#
#
left_k_hats <- nus#
right_k_hats <- nus#
#
S <- 10000#
N <- 10000#
#
for (n in 1:N) {#
  k_hats <- sapply(nus, function(nu) tail_k_hats(rt(10000, nu)))#
  left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  right_k_hats <- cbind(right_k_hats, k_hats[2,])#
}
left_k_hats
dim(left_k_hats)
probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
cred <- sapply(1:length(nus), function(n) quantile(params$beta[,m], probs=probs))
length(nus)
left_k_hats[1,]
left_k_hats[2,]
left_k_hats[,1]
length(left_k_hats[1,])
probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
cred <- sapply(1:length(nus), function(n) quantile(left_k_hats[n,2:1278], probs=probs))
dim(cred)
cred[,2]
plot(1, type="n", main=title,#
     xlim=c(0.5, 10, xlab="nu", ylab="Left k_hat")#
#
polygon(c(x, rev(x)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)
plot(1, type="n", main=title,#
     xlim=c(0.5, 10), xlab="nu", ylab="Left k_hat")#
#
polygon(c(x, rev(x)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)
cred[1,]
plot(1, type="n", main=title,#
     xlim=c(0.5, 10), xlab="nu", ylab="Left k_hat")#
#
polygon(c(nus, rev(x)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(x)), c(pad_cred[2,], rev(pad_cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(x)), c(pad_cred[3,], rev(pad_cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(x)), c(pad_cred[4,], rev(pad_cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, pad_cred[5,], col=c_dark, lwd=2)
plot(1, type="n", main=title,#
     xlim=c(0.5, 10), xlab="nu", ylab="Left k_hat")#
#
polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, cred[5,], col=c_dark, lwd=2)
dim(left_k_hat)
dim(left_k_hats)
plot(1, type="n", main="S = 10000",#
     xlim=c(0.5, 10), xlab="nu", ylab="Left k_hat")#
#
polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, cred[5,], col=c_dark, lwd=2)
plot(1, type="n", main="S = 10000",#
     xlim=c(0.5, 10), xlab="nu", ylim=c(0, 5), ylab="Left k_hat")#
#
polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, cred[5,], col=c_dark, lwd=2)
plot(1, type="n", main="S = 10000",#
     xlim=c(0.5, 10), xlab="nu", ylim=c(0, 2), ylab="Left k_hat")#
#
polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, cred[5,], col=c_dark, lwd=2)#
#
abline(v=1, col="gray80", lwd=2, lty=3)#
abline(v=2, col="gray80", lwd=2, lty=3)
plot(1, type="n", main="S = 10000",#
     xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="Left k_hat")#
#
polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, cred[5,], col=c_dark, lwd=2)
plot(1, type="n", main="S = 10000",#
     xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="Left k_hat")#
#
polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, cred[5,], col=c_dark, lwd=2)
plot(1, type="n", main="S = 10000",#
     xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="Left k_hat")#
#
polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
        col = c_light, border = NA)#
polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
        col = c_light_highlight, border = NA)#
polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
        col = c_mid, border = NA)#
polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
        col = c_mid_highlight, border = NA)#
lines(nus, cred[5,], col=c_dark, lwd=2)#
#
abline(v=1, col="gray80", lwd=2, lty=3)#
abline(v=2, col="gray80", lwd=2, lty=3)#
#
abline(h=0.5, col="gray80", lwd=2, lty=3)#
abline(h=1, col="gray80", lwd=2, lty=3)
plot_k_hats <- function(nus, k_hats, title) {#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:1278], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="Left k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(2, 1))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
tail_k_hats <- function(x) {#
  x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)#
  x_right <- x[x > x_center] - x_center#
  q <- quantile(x_left, probs=c(0.25))#
  x_left <- x_left[x_left > q]#
  q <- quantile(x_right, probs=c(0.25))#
  x_right <- x_left[x_right > q]#
  c(k_hat(x_left), k_hat(x_right))#
}
set.seed(585483)#
#
nus <- seq(0.5, 10, 0.1)#
#
left_k_hats <- nus#
right_k_hats <- nus#
#
S <- 10000#
N <- 100#
#
for (n in 1:N) {#
  k_hats <- sapply(nus, function(nu) tail_k_hats(rt(10000, nu)))#
  left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  right_k_hats <- cbind(right_k_hats, k_hats[2,])#
}
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.25, col=white, lwd=1.5)#
  lines(nus, 1 / nus - 0.25, col=black, lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.25, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.25, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.5, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.5, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.25, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.25, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.33, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.33, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 10000")#
plot_k_hats(nus, left_k_hats, "Right, S = 10000")
set.seed(585483)#
#
nus <- seq(0.5, 10, 0.1)#
#
left_k_hats <- nus#
right_k_hats <- nus#
#
S <- 1000#
N <- 100#
#
for (n in 1:N) {#
  k_hats <- sapply(nus, function(nu) tail_k_hats(rt(10000, nu)))#
  left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  right_k_hats <- cbind(right_k_hats, k_hats[2,])#
}#
#
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 1000")#
plot_k_hats(nus, left_k_hats, "Right, S = 1000")
left_k_hats_1000 <- left_k_hats
right_k_hats_1000 <- right_k_hats
set.seed(585483)#
#
nus <- seq(0.5, 10, 0.1)#
#
left_k_hats <- nus#
right_k_hats <- nus#
#
S <- 100#
N <- 100#
#
for (n in 1:N) {#
  k_hats <- sapply(nus, function(nu) tail_k_hats(rt(10000, nu)))#
  left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  right_k_hats <- cbind(right_k_hats, k_hats[2,])#
}
left_k_hats_100 <- left_k_hats
right_k_hats_100 <- right_k_hats
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 1000")#
plot_k_hats(nus, left_k_hats, "Right, S = 1000")
left_k_hats_10000 <- left_k_hats
right_k_hats_10000 <- right_k_hats
left_k_hats <- nus#
right_k_hats <- nus#
#
S <- 1000#
N <- 100#
#
for (n in 1:N) {#
  k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu)))#
  left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  right_k_hats <- cbind(right_k_hats, k_hats[2,])#
}
par(mfrow=c(1, 2))#
#
plot_k_hats(nus, left_k_hats, "Left, S = 1000")#
plot_k_hats(nus, left_k_hats, "Right, S = 1000")
right_k_hats_1000 <- right_k_hats
left_k_hats_1000 <- left_k_hats
left_k_hats <- nus#
right_k_hats <- nus#
#
S <- 100#
N <- 100#
#
for (n in 1:N) {#
  k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu)))#
  left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  right_k_hats <- cbind(right_k_hats, k_hats[2,])#
}
left_k_hats_100 <- left_k_hats
right_k_hats_100 <- right_k_hats
par(mfrow=c(1, 3))#
#
plot_k_hats(nus, left_k_hats_100, "Left, S = 100")#
plot_k_hats(nus, left_k_hats_1000, "Left, S = 1000")#
plot_k_hats(nus, left_k_hats_10000, "Left, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 3))#
#
plot_k_hats(nus, left_k_hats_100, "Left, S = 100")#
plot_k_hats(nus, left_k_hats_1000, "Left, S = 1000")#
plot_k_hats(nus, left_k_hats_10000, "Left, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.2, col="gray80", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(1, 3))#
#
plot_k_hats(nus, left_k_hats_100, "Left, S = 100")#
plot_k_hats(nus, left_k_hats_1000, "Left, S = 1000")#
plot_k_hats(nus, left_k_hats_10000, "Left, S = 10000")
left_k_hats <- nus#
right_k_hats <- nus#
#
S <- 500#
N <- 100#
#
for (n in 1:N) {#
  k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu)))#
  left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  right_k_hats <- cbind(right_k_hats, k_hats[2,])#
}
left_k_hats_500 <- left_k_hats
right_k_hats_500 <- right_k_hats
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(2, 2))#
#
plot_k_hats(nus, left_k_hats_100, "Left, S = 100")#
plot_k_hats(nus, left_k_hats_500, "Left, S = 500")#
plot_k_hats(nus, left_k_hats_1000, "Left, S = 1000")#
plot_k_hats(nus, left_k_hats_10000, "Left, S = 10000")
k_hat <- function(x) {#
  N <- length(x)#
  x <- sort(x)#
  if (x[1] <= 0) {#
    print("x must be positive!")#
    return (0)#
  }#
#
  q <- x[floor(0.25 * N + 0.5)]#
#
  M <- 20 + floor(sqrt(N))#
#
  b_hat_vec <- rep(0, M)#
  log_w_vec <- rep(0, M)#
#
  for (m in 1:M) {#
    b_hat_vec[m] <- 1 / x[N] + (1 - sqrt(M / (m - 0.5))) / (3 * q)#
    k_hat <- - mean( log (1 - b_hat_vec[m] * x) )#
    log_w_vec[m] <- length(x) * ( log(b_hat_vec[m] / k_hat) + k_hat - 1)#
  }#
#
  max_log_w <- max(log_w_vec)#
  b_hat <- sum(b_hat_vec * exp(log_w_vec - max_log_w)) / sum(exp(log_w_vec - max_log_w))#
#
  mean( log (1 - b_hat * x) )#
}#
#
tail_k_hats <- function(x, q) {#
  x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)#
  x_right <- x[x > x_center] - x_center#
  q <- quantile(x_left, probs=c(q))#
  x_left <- x_left[x_left > q]#
  khat(x_left)#
  //q <- quantile(x_right, probs=c(q))#
  //x_right <- x_left[x_right > q]#
  //c(k_hat(x_left), k_hat(x_right))#
}#
#
function <- k_hat_scan(nus, S, N, q) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu)))#
    left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
#
  return(left_k_hats)#
}#
#
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}#
#
c_light <- c("#DCBCBC")#
c_light_highlight <- c("#C79999")#
c_mid <- c("#B97C7C")#
c_mid_highlight <- c("#A25050")#
c_dark <- c("#8F2727")#
c_dark_highlight <- c("#7C0000")
tail_k_hats <- function(x, q) {#
  x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)#
  x_right <- x[x > x_center] - x_center#
  q <- quantile(x_left, probs=c(q))#
  x_left <- x_left[x_left > q]#
  khat(x_left)#
  #q <- quantile(x_right, probs=c(q))#
  #x_right <- x_left[x_right > q]#
  #c(k_hat(x_left), k_hat(x_right))#
}
function <- k_hat_scan(nus, S, N, q) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu)))#
    left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
#
  return(left_k_hats)#
}
k_hat_scan <- function(nus, S, N, q) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu)))#
    left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
#
  return(left_k_hats)#
}
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
c_light <- c("#DCBCBC")#
c_light_highlight <- c("#C79999")#
c_mid <- c("#B97C7C")#
c_mid_highlight <- c("#A25050")#
c_dark <- c("#8F2727")#
c_dark_highlight <- c("#7C0000")#
#
set.seed(585483)
nus <- seq(0.5, 10, 0.1)#
#
k1 <- k_hat_scan(nus, 100, 100, 0.25)#
k2 <- k_hat_scan(nus, 500, 100, 0.25)#
k3 <- k_hat_scan(nus, 1000, 100, 0.25)#
k4 <- k_hat_scan(nus, 10000, 100, 0.25)
?rt
k_hat_scan <- function(nus, S, N, q) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu), q))#
    left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
#
  return(left_k_hats)#
}
k1 <- k_hat_scan(nus, 100, 100, 0.25)#
k2 <- k_hat_scan(nus, 500, 100, 0.25)#
k3 <- k_hat_scan(nus, 1000, 100, 0.25)#
k4 <- k_hat_scan(nus, 10000, 100, 0.25)
k_hat <- function(x) {#
  N <- length(x)#
  x <- sort(x)#
  if (x[1] <= 0) {#
    print("x must be positive!")#
    return (0)#
  }#
#
  q <- x[floor(0.25 * N + 0.5)]#
#
  M <- 20 + floor(sqrt(N))#
#
  b_hat_vec <- rep(0, M)#
  log_w_vec <- rep(0, M)#
#
  for (m in 1:M) {#
    b_hat_vec[m] <- 1 / x[N] + (1 - sqrt(M / (m - 0.5))) / (3 * q)#
    k_hat <- - mean( log (1 - b_hat_vec[m] * x) )#
    log_w_vec[m] <- length(x) * ( log(b_hat_vec[m] / k_hat) + k_hat - 1)#
  }#
#
  max_log_w <- max(log_w_vec)#
  b_hat <- sum(b_hat_vec * exp(log_w_vec - max_log_w)) / sum(exp(log_w_vec - max_log_w))#
#
  mean( log (1 - b_hat * x) )#
}#
#
tail_k_hats <- function(x, q) {#
  x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)#
  x_right <- x[x > x_center] - x_center#
  q <- quantile(x_left, probs=c(q))#
  x_left <- x_left[x_left > q]#
  k_hat(x_left)#
  #q <- quantile(x_right, probs=c(q))#
  #x_right <- x_left[x_right > q]#
  #c(k_hat(x_left), k_hat(x_right))#
}#
#
k_hat_scan <- function(nus, S, N, q) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu), q))#
    left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
#
  return(left_k_hats)#
}#
#
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-0.25, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}#
#
c_light <- c("#DCBCBC")#
c_light_highlight <- c("#C79999")#
c_mid <- c("#B97C7C")#
c_mid_highlight <- c("#A25050")#
c_dark <- c("#8F2727")#
c_dark_highlight <- c("#7C0000")#
#
set.seed(585483)#
#
nus <- seq(0.5, 10, 0.1)
k1 <- k_hat_scan(nus, 100, 100, 0.25)
k_hat_scan <- function(nus, S, N, q) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu), q))#
    left_k_hats <- cbind(left_k_hats, k_hats)#
    #left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
#
  return(left_k_hats)#
}
k1 <- k_hat_scan(nus, 100, 100, 0.25)
k2 <- k_hat_scan(nus, 500, 100, 0.25)#
k3 <- k_hat_scan(nus, 1000, 100, 0.25)#
k4 <- k_hat_scan(nus, 10000, 100, 0.25)
par(mfrow=c(2, 2))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}
k5 <- k_hat_scan(nus, 100, 100, 0.5)#
k6 <- k_hat_scan(nus, 500, 100, 0.5)#
k7 <- k_hat_scan(nus, 1000, 100, 0.5)#
k8 <- k_hat_scan(nus, 10000, 100, 0.5)#
#
k9  <- k_hat_scan(nus, 100, 100, 0.75)#
k10 <- k_hat_scan(nus, 500, 100, 0.75)#
k11 <- k_hat_scan(nus, 1000, 100, 0.75)#
k12 <- k_hat_scan(nus, 10000, 100, 0.75)
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
par(mfrow=c(3, 4))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
k_hat <- function(x) {#
  N <- length(x)#
  x <- sort(x)#
  if (x[1] <= 0) {#
    print("x must be positive!")#
    return (0)#
  }#
#
  q <- x[floor(0.25 * N + 0.5)]#
#
  M <- 80 + floor(sqrt(N))#
#
  b_hat_vec <- rep(0, M)#
  log_w_vec <- rep(0, M)#
#
  for (m in 1:M) {#
    b_hat_vec[m] <- 1 / x[N] + (1 - sqrt(M / (m - 0.5))) / (3 * q)#
    k_hat <- - mean( log (1 - b_hat_vec[m] * x) )#
    log_w_vec[m] <- length(x) * ( log(b_hat_vec[m] / k_hat) + k_hat - 1)#
  }#
#
  max_log_w <- max(log_w_vec)#
  b_hat <- sum(b_hat_vec * exp(log_w_vec - max_log_w)) / sum(exp(log_w_vec - max_log_w))#
#
  k_hat_raw <- mean (log (1 - b_hat * x) )#
  theta <- N / (N + 10.0)#
  theta * k_hat_raw + (1 - theta) * 0.5#
}#
#
tail_k_hats <- function(x, q) {#
  x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)#
  x_right <- x[x > x_center] - x_center#
  q <- quantile(x_left, probs=c(q))#
  x_left <- x_left[x_left > q]#
  k_hat(x_left)#
  #q <- quantile(x_right, probs=c(q))#
  #x_right <- x_left[x_right > q]#
  #c(k_hat(x_left), k_hat(x_right))#
}#
#
k_hat_scan <- function(nus, S, N, q) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats(rt(S, nu), q))#
    left_k_hats <- cbind(left_k_hats, k_hats)#
    #left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
#
  return(left_k_hats)#
}#
#
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  abline(h=0.1, col="gray80", lwd=2, lty=3)#
  abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  abline(h=1, col="gray80", lwd=2, lty=3)#
}#
#
c_light <- c("#DCBCBC")#
c_light_highlight <- c("#C79999")#
c_mid <- c("#B97C7C")#
c_mid_highlight <- c("#A25050")#
c_dark <- c("#8F2727")#
c_dark_highlight <- c("#7C0000")
set.seed(585483)#
#
nus <- seq(0.5, 10, 0.1)#
#
k1 <- k_hat_scan(nus, 100, 100, 0.25)#
k2 <- k_hat_scan(nus, 500, 100, 0.25)#
k3 <- k_hat_scan(nus, 1000, 100, 0.25)#
k4 <- k_hat_scan(nus, 10000, 100, 0.25)#
#
k5 <- k_hat_scan(nus, 100, 100, 0.5)#
k6 <- k_hat_scan(nus, 500, 100, 0.5)#
k7 <- k_hat_scan(nus, 1000, 100, 0.5)#
k8 <- k_hat_scan(nus, 10000, 100, 0.5)#
#
k9  <- k_hat_scan(nus, 100, 100, 0.75)#
k10 <- k_hat_scan(nus, 500, 100, 0.75)#
k11 <- k_hat_scan(nus, 1000, 100, 0.75)#
k12 <- k_hat_scan(nus, 10000, 100, 0.75)
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  #abline(h=0.1, col="gray80", lwd=2, lty=3)#
  #abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  #abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  #lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  #lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  #abline(h=0.1, col="gray80", lwd=2, lty=3)#
  #abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.5, col="gray80", lwd=2, lty=3)#
  #abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  #lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  #lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=3)#
  abline(v=2, col="gray80", lwd=2, lty=3)#
  #abline(h=0.1, col="gray80", lwd=2, lty=3)#
  #abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.25, col="gray80", lwd=2, lty=3)#
  #abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  #lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  #lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=2, lty=2)#
  abline(v=2, col="gray80", lwd=2, lty=2)#
  #abline(h=0.1, col="gray80", lwd=2, lty=3)#
  #abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.15, col="gray80", lwd=2, lty=2)#
  #abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
plot_k_hats <- function(nus, k_hats, title) {#
  N <- dim(k_hats)[2]#
  probs = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)#
  cred <- sapply(1:length(nus), function(n) quantile(k_hats[n,2:N], probs=probs))#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(-1, 2), ylab="k_hat")#
  polygon(c(nus, rev(nus)), c(cred[1,], rev(cred[9,])),#
          col = c_light, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[2,], rev(cred[8,])),#
          col = c_light_highlight, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[3,], rev(cred[7,])),#
          col = c_mid, border = NA)#
  polygon(c(nus, rev(nus)), c(cred[4,], rev(cred[6,])),#
          col = c_mid_highlight, border = NA)#
  lines(nus, cred[5,], col=c_dark, lwd=2)#
  #lines(nus, 1 / nus - 0.3, col="white", lwd=1.5)#
  #lines(nus, 1 / nus - 0.3, col="black", lwd=1.25)#
  abline(v=1, col="gray80", lwd=1, lty=3)#
  abline(v=2, col="gray80", lwd=1, lty=3)#
  #abline(h=0.1, col="gray80", lwd=2, lty=3)#
  #abline(h=0.2, col="gray50", lwd=2, lty=3)#
  abline(h=0.15, col="gray80", lwd=1, lty=3)#
  #abline(h=1, col="gray80", lwd=2, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")
dim(k4)
dim(nus)
length(nus)
k4[1,]
nus[1]
nus < 2
nus <= 2
sum(nus <= 2)
nus[16]
k4[1,2:N]
N <- 101
k4[1,2:N]
k_threshold <- 0.2
k4[1,2:N] > k_threshold
plot_roc <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N <- length(nus)#
  N_bad <- sum(nus <= 2)#
  N_good <- N - N_bad#
  fdrs <- nus#
  for (n in 1:N) {#
    if (n <= N_bad)#
      fdr[n] <- 1 - sum(k_hats[1, 2:N] > k_threshold) / R#
    else#
      fdr[n] <- 1 - sum(k_hats[1, 2:N] <= k_threshold) / R#
  }#
  plot(nus, fdrs, type="l", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
}
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N <- length(nus)#
  N_bad <- sum(nus <= 2)#
  N_good <- N - N_bad#
  fdrs <- nus#
  for (n in 1:N) {#
    if (n <= N_bad)#
      fdr[n] <- 1 - sum(k_hats[1, 2:N] > k_threshold) / R#
    else#
      fdr[n] <- 1 - sum(k_hats[1, 2:N] <= k_threshold) / R#
  }#
  plot(nus, fdrs, type="l", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
}
plot_fdr(nus, k6, "q = 0.5, S = 500")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N <- length(nus)#
  N_bad <- sum(nus <= 2)#
  N_good <- N - N_bad#
  fdrs <- nus#
  for (n in 1:N) {#
    if (n <= N_bad)#
      fdrs[n] <- 1 - sum(k_hats[1, 2:N] > k_threshold) / R#
    else#
      fdrs[n] <- 1 - sum(k_hats[1, 2:N] <= k_threshold) / R#
  }#
  plot(nus, fdrs, type="l", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
}
plot_fdr(nus, k6, "q = 0.5, S = 500")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N <- length(nus)#
  N_bad <- sum(nus <= 2)#
  N_good <- N - N_bad#
  fdrs <- nus#
  for (n in 1:N) {#
    if (n <= N_bad)#
      fdrs[n] <- 1 - sum(k_hats[n, 2:N] > k_threshold) / R#
    else#
      fdrs[n] <- 1 - sum(k_hats[n, 2:N] <= k_threshold) / R#
  }#
  plot(nus, fdrs, type="l", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
}
plot_fdr(nus, k6, "q = 0.5, S = 500")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N <- length(nus)#
  N_bad <- sum(nus <= 2)#
  N_good <- N - N_bad#
  fdrs <- nus#
  k_threshold <- 0.25#
  for (n in 1:N) {#
    if (n <= N_bad)#
      fdrs[n] <- 1 - sum(k_hats[n, 2:N] > k_threshold) / R#
    else#
      fdrs[n] <- 1 - sum(k_hats[n, 2:N] <= k_threshold) / R#
  }#
  plot(nus, fdrs, type="l", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
}
plot_fdr(nus, k6, "q = 0.5, S = 500")
k6[1,2:101]
k6[1,2:101] > 0.25
sum(k6[1,2:101] > 0.25)
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N <- length(nus)#
  N_bad <- sum(nus <= 2)#
  N_good <- N - N_bad#
  fdrs <- nus#
  k_threshold <- 0.25#
  for (n in 1:N) {#
    if (n <= N_bad)#
      fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
    else#
      fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
  }#
  plot(nus, fdrs, type="l", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
}
sum(k6[1,2:101] > 0.25)
plot_fdr(nus, k6, "q = 0.5, S = 500")
k_thresholds <- c(0.1, 0.15, 0.2)
for (k in k_thresholds) print(k)
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
  k_thresholds <- c(0.1, 0.15, 0.2)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
}
plot_fdr(nus, k6, "q = 0.5, S = 500")
plot_k_hats(nus, k6, "q = 0.5, S = 500")
plot_fdr(nus, k6, "q = 0.5, S = 500")
rect(0.5, 0.0, 10.0, 0.2, col = c_light)
rect(0.5, 0.0, 10.0, 0.2, col = c_light, border=NA)
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="False Discovery Rate")#
  rect(0.5, 0.0, 10.0, 0.2, col = c_light, border=NA)#
  k_thresholds <- c(0.1, 0.15, 0.2)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.2, col = c_light, border=NA)#
  k_thresholds <- c(0.1, 0.15, 0.2)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.2, col = c_light, border=NA)#
  k_thresholds <- c(0.0, 0.75, 0.15)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.2, col = c_light, border=NA)#
  k_thresholds <- c(0.75)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.2, col = c_light, border=NA)#
  k_thresholds <- c(0.0)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.2, col = c_light, border=NA)#
  k_thresholds <- c(0.0, 0.075)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.05, col = c_light, border=NA)#
  k_thresholds <- c(0.05, 0.075, 0.1)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.05, col = c_light, border=NA)#
  k_thresholds <- c(0.0, 0.075, 0.1)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.05, col = c_light, border=NA)#
  k_thresholds <- c(0.05)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.05, col = c_light, border=NA)#
  k_thresholds <- c(0.1)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.05, col = c_light, border=NA)#
  k_thresholds <- c(0.15)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
plot_fdr <- function(nus, k_hats, title) {#
  R <- dim(k_hats)[2]#
  N_bad <- sum(nus <= 2)#
  fdrs <- nus#
  plot(1, type="n", main=title,#
       xlim=c(0.5, 10), xlab="nu", ylim=c(0, 1), ylab="Misclassification Rate")#
  rect(0.5, 0.0, 10.0, 0.05, col = c_light, border=NA)#
  k_thresholds <- c(0.125)#
  for (k_threshold in k_thresholds) {#
    for (n in 1:length(nus)) {#
      if (n <= N_bad)#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] > k_threshold) / R#
      else#
        fdrs[n] <- 1 - sum(k_hats[n, 2:R] <= k_threshold) / R#
    }#
    lines(nus, fdrs, col="white", lwd=1.5)#
    lines(nus, fdrs, col="black", lwd=1.25)#
  }#
  abline(v=2, col="gray80", lwd=1, lty=3)#
}
par(mfrow=c(4, 3))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")
x_left
x <- rt(S, nu)
x <- rt(1000, nu)
x <- rt(1000, 0.75)
x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)
x_left
T <- 3 * sqrt(length(x_left))
T
length(x_left)
x_left[(500 - 67):500]
length(x_left[(500 - 67):500])
?ceiling
tail_k_hats_sqrt <- function(x) {#
  x_center <- median(x)#
  x_left <- abs(x[x < x_center] - x_center)#
  x_right <- x[x > x_center] - x_center#
  N <- length(x_left)#
  T <- ceiling(3 * sqrt(N))#
  x_left <- x_left[(N - T):N]#
  k_hat(x_left)#
  #q <- quantile(x_right, probs=c(q))#
  #x_right <- x_left[x_right > q]#
  #c(k_hat(x_left), k_hat(x_right))#
}
k_hat_sqrt_scan <- function(nus, S, N) {#
  left_k_hats <- nus#
  for (n in 1:N) {#
    k_hats <- sapply(nus, function(nu) tail_k_hats_sqrt(rt(S, nu)))#
    left_k_hats <- cbind(left_k_hats, k_hats)#
    #left_k_hats <- cbind(left_k_hats, k_hats[1,])#
  }#
  return(left_k_hats)#
}
k13  <- k_hat_sqrt_scan(nus, 100, 100)
k14 <- k_hat_sqrt_scan(nus, 500, 100)#
k15 <- k_hat_sqrt_scan(nus, 1000, 100)#
k16 <- k_hat_sqrt_scan(nus, 10000, 100)
par(mfrow=c(4, 4))#
#
plot_fdr(nus, k1, "q = 0.25, S = 100")#
plot_fdr(nus, k5, "q = 0.5, S = 100")#
plot_fdr(nus, k9,  "q = 0.75, S = 100")#
plot_fdr(nus, k13,  "3 * sqrt(N), S = 100")#
#
plot_fdr(nus, k2, "q = 0.25, S = 500")#
plot_fdr(nus, k6, "q = 0.5, S = 500")#
plot_fdr(nus, k10, "q = 0.75, S = 500")#
plot_fdr(nus, k14,  "3 * sqrt(N), S = 500")#
#
plot_fdr(nus, k3, "q = 0.25, S = 1000")#
plot_fdr(nus, k7, "q = 0.5, S = 1000")#
plot_fdr(nus, k11, "q = 0.75, S = 1000")#
plot_fdr(nus, k15,  "3 * sqrt(N), S = 1000")#
#
plot_fdr(nus, k4, "q = 0.25, S = 10000")#
plot_fdr(nus, k8, "q = 0.5, S = 10000")#
plot_fdr(nus, k12, "q = 0.75, S = 10000")#
plot_fdr(nus, k16,  "3 * sqrt(N), S = 10000")
par(mfrow=c(4, 4))#
#
plot_k_hats(nus, k1, "q = 0.25, S = 100")#
plot_k_hats(nus, k5, "q = 0.5, S = 100")#
plot_k_hats(nus, k9,  "q = 0.75, S = 100")#
plot_k_hats(nus, k13,  "3 * sqrt(N), S = 100")#
#
plot_k_hats(nus, k2, "q = 0.25, S = 500")#
plot_k_hats(nus, k6, "q = 0.5, S = 500")#
plot_k_hats(nus, k10, "q = 0.75, S = 500")#
plot_k_hats(nus, k14,  "3 * sqrt(N), S = 500")#
#
plot_k_hats(nus, k3, "q = 0.25, S = 1000")#
plot_k_hats(nus, k7, "q = 0.5, S = 1000")#
plot_k_hats(nus, k11, "q = 0.75, S = 1000")#
plot_k_hats(nus, k15,  "3 * sqrt(N), S = 1000")#
#
plot_k_hats(nus, k4, "q = 0.25, S = 10000")#
plot_k_hats(nus, k8, "q = 0.5, S = 10000")#
plot_k_hats(nus, k12, "q = 0.75, S = 10000")#
plot_k_hats(nus, k16,  "3 * sqrt(N), S = 10000")
setwd('/Users/Betancourt/Documents/Research/Courses/2018.06.18 Jumping Rivers/exercises/day1/1 - workflow')
library(rstan)#
rstan_options(auto_write = TRUE)#
#
library(foreach)#
library(doParallel)#
#
util <- new.env()#
source('stan_utility.R', local=util)#
#
c_light <- c("#DCBCBC")#
c_light_highlight <- c("#C79999")#
c_mid <- c("#B97C7C")#
c_mid_highlight <- c("#A25050")#
c_dark <- c("#8F2727")#
c_dark_highlight <- c("#7C0000")
simu_data <- list("N" = N)#
#
fit <- stan(file='generative_ensemble.stan', data=simu_data,#
            iter=R, warmup=0, chains=1, refresh=R,#
            seed=4838282, algorithm="Fixed_param")#
#
simu_lambdas <- extract(fit)$lambda#
simu_ys <- extract(fit)$y
R <- 1000 # 1000 draws from the Bayesian joint distribution#
N <- 100
simu_data <- list("N" = N)#
#
fit <- stan(file='generative_ensemble.stan', data=simu_data,#
            iter=R, warmup=0, chains=1, refresh=R,#
            seed=4838282, algorithm="Fixed_param")#
#
simu_lambdas <- extract(fit)$lambda#
simu_ys <- extract(fit)$y
tryCatch({#
  registerDoParallel(makeCluster(detectCores()))#
#
  simu_list <- t(data.matrix(data.frame(simu_lambdas, simu_ys)))#
#
  # Compile the posterior fit model#
  fit_model = stan_model(file='fit_data.stan')#
#
  ensemble_output <- foreach(simu=simu_list,#
                             .combine='cbind') %dopar% {#
    simu_lambda <- simu[1]#
    simu_y <- simu[2:(N + 1)];#
#
    # Fit the simulated observation#
    input_data <- list("N" = N, "y" = simu_y)#
#
    #sink(file="/dev/null")#
    capture.output(#
      library(rstan)#
      fit <- sampling(fit_model, data=input_data, seed=4938483)#
    )#
    #sink()#
#
    # Compute diagnostics#
    util <- new.env()#
    source('stan_utility.R', local=util)#
#
    warning_code <- util$check_all_diagnostics(fit, quiet=TRUE)#
#
    # Compute rank of prior draw with respect to thinned posterior draws#
    sbc_rank <- sum(simu_lambda < extract(fit)$lambda[seq(1, 4000 - 8, 8)])#
#
    # Compute posterior sensitivities#
    s <- summary(fit, probs = c(), pars='lambda')$summary#
    post_mean_lambda <- s[,1]#
    post_sd_lambda <- s[,3]#
#
    prior_sd_lambda <- 6.44787#
#
    z_score <- abs((post_mean_lambda - simu_lambda) / post_sd_lambda)#
    shrinkage <- 1 - (post_sd_lambda / prior_sd_lambda)**2#
#
    c(warning_code, sbc_rank, z_score, shrinkage)#
  }#
}, finally={ stopImplicitCluster() })
tryCatch({#
  registerDoParallel(makeCluster(detectCores()))#
#
  simu_list <- t(data.matrix(data.frame(simu_lambdas, simu_ys)))#
#
  # Compile the posterior fit model#
  fit_model = stan_model(file='fit_data.stan')#
#
  ensemble_output <- foreach(simu=simu_list,#
                             .combine='cbind') %dopar% {#
    simu_lambda <- simu[1]#
    simu_y <- simu[2:(N + 1)];#
#
    # Fit the simulated observation#
    input_data <- list("N" = N, "y" = simu_y)#
#
    #sink(file="/dev/null")#
    capture.output(library(rstan))#
    capture.output(fit <- sampling(fit_model, data=input_data, seed=4938483))#
    #sink()#
#
    # Compute diagnostics#
    util <- new.env()#
    source('stan_utility.R', local=util)#
#
    warning_code <- util$check_all_diagnostics(fit, quiet=TRUE)#
#
    # Compute rank of prior draw with respect to thinned posterior draws#
    sbc_rank <- sum(simu_lambda < extract(fit)$lambda[seq(1, 4000 - 8, 8)])#
#
    # Compute posterior sensitivities#
    s <- summary(fit, probs = c(), pars='lambda')$summary#
    post_mean_lambda <- s[,1]#
    post_sd_lambda <- s[,3]#
#
    prior_sd_lambda <- 6.44787#
#
    z_score <- abs((post_mean_lambda - simu_lambda) / post_sd_lambda)#
    shrinkage <- 1 - (post_sd_lambda / prior_sd_lambda)**2#
#
    c(warning_code, sbc_rank, z_score, shrinkage)#
  }#
}, finally={ stopImplicitCluster() })
